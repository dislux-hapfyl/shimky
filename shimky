. pnk.lang

MP3_DIR=

ca=CommA
cb=ShellOut
ma=txtW
mb=shellout
oa=i$ca.$ma
od=i$cb.$mb
ws=mp3Cmd
wl=musicBox
M=master

aa='fg="#DDD"'
abc='blockcursor=True'
bb='bg="#222"'
bd=bg=$bg
ds='state="disabled"'
ee='cursor="pencil"'
eh='cursor="heart"'
en='state="normal"'
fa='font=("VictorMono",16)'
fe='cursor="spider"'
ff='cursor="shuttle"'
gg=highlightbackground=$bg
hh='highlightbackground="#444"'
ia='highlightcolor="#2BCDBB"'
ib='highlightcolor="#222"'
ic='highlightcolor="red"'
id='highlightcolor="orange"'
jc='insertbackground="red"'
kk='relief="flat"'
ll='padx=12'
mm='pady=12'
uu='undo=True'
wb='width=10'
wd='height=16'
wr='wrap="word"'


opta=$aa,$bd,$ee,$gg,$ib,$kk,$wb,$fa
optb=$bd,$hh,$fe,$ib,$jc
optc=$ia,$uu,$abc,$mm,$ll,$ff,$fa,$jc,$hh,$bb,$ds,$wr
optd=$aa,$bd,$ee,$gg,$id,$jc,$kk,$abc,$fa,$mm,$ll

ZDshebang 
ZDfrm tkinter Tk,Frame,Text,Entry,PanedWindow,Listbox
ZDfrm re finditer
ZDfrm threading Thread
ZDfrm os listdir,system,rename,path
ZDfrm pytube YouTube
ZDimp subprocess
ZDimp datetime


ZFtoorwin Pnk

XFpnwin pw '"horizontal"'
XFpk pw 1 both
XFcfg '' $eh
XFfc z run

XFbinda Control-r run


YDdefe run
XIcv app App
XFfc zz pw.add app



ZDcld App

XIcv cli Entry $opta
XFpk cli 0 x $sb,$aw
XFcfg cli. $optb
XFfc z cli.focus

XIcv i$ca $ca
XFpk i$ca 0 y $sl

XIcv rec $ca
XFpk rec 1 both $sl
XFcfg rec.$ma. $optc

XFbind cli Escape cliclr
XFbind cli Return cliSh
XFbind cli Tab myins
XFbind rec.$ma Shift_R rec.doSyntax
XFbind rec.$ma Escape myExit
XFbind rec.$ma Button-3 myins
XFbind $oa Double-Button-1 sendPnk

XFtins $oa insert 'f"ZDshebang\nZDfrm\nZDimp\nZDas\nZFtoorwin\nZDdc\nZDcld\nXIcv\nZFmain\nZDfd\nYDfd\nXDfd\nWDfd\nZDdefe\nYDret\nYDdefp\nXDret\nYDdefe\nYDdefs\nXDdefe\nWDret\nXDdefs\nWDdefe\nVDret\nWDdefs\nZFfc\nYFfc\nXFfc\nWFfc\nVFfc\nUFfc\nZIfv\nYIfv\nXIfv\nWIfv\nVIfv\nUIfv\nZIv\nYIv\nXIv\nWIv\nVIv\nUIv\nZIac\nYIac\nXIac\nWIac\nVIac\nUIac\nZIrd\nYIrd\nXIrd\nWIrd\nVIrd\nUIrd\nZIdvd\nYIdvd\nXIdvd\nWIdvd\nVIdvd\nUIdvd\nYKtry\nYKexcp\nYKfin\nXKtry\nXKexcp\nXKfin\nWKtry\nWKexcp\nWKfin\nVKtry\nVKexcp\nVKfin\nZKif\nYKif\nXKif\nWKif\nVKif\nUKif\nZKiff\nYKiff\nXKiff\nWKiff\nVKiff\nUKiff\nZKelif\nYKelif\nXKelif\nWKelif\nVKelif\nUKelif\nZKeliff\nYKeliff\nXKeliff\nWKeliff\nVKeliff\nUKeliff\nZKelse\nYKelse\nXKelse\nWKelse\nVKelse\nUKelse\nYKbr\nXKbr\nWKbr\nVKbr\nUKbr\nYKctn\nXKctn\nWKctn\nVKctn\nUKctn\nYKps\nXKps\nWKps\nVKps\nUKps\nZLfor\nYLfor\nXLfor\nWLfor\nVLfor\nULfor\nZLffor\nYLffor\nXLffor\nWLffor\nVLffor\nULffor\nZLwhile\nYLwhile\nXLwhile\nWLwhile\nVLwhile\nULwhile\nXFbtn\nXFtext\nXFpnwin\nXFnotebk\nXFentry\nXFlabel\nXFlbox\nXIeget\nXItgetln\nXItget\nXItgeta\nWItgetln\nWItget\nWIeget\nXFpk\nXFpl\nXFgd\nXFgdcfc\nXFgdcfr\nXFbind\nXFbinda\nXFshsp\nXFshspp\nXFpyev\nXFopft\nXFwrtf\nXFset\nXFcfg\nXFedel\nXFeins\nXFtdel\nXFtlndel\nXFtins\nWFtagcfg\nWFtins\nWFset\nWFcfg\nWFedel\nWFeins\nWFtdel\nWFtlndel\nVFtins\n"'
XFfc z i$ca.doSyntax
XFcfg $oa. $ds


YDdefe clearOut
XFfc z i$cb.destroy 
XFfc z cli.focus


YDdefe sendBack
XItgeta $od data
XFfc z myins
XFtins rec.$ma 1.0 data
XFfc z rec.$ma.see 1.0
XFfc z myExit
XFfc z $od.focus


YDdefe innerShell
XItgetln $od com
XFshsp $od com
XFfc z $od.see '"end"'


YDdefe mapitOut
XIeget cli line
XIfv - tt line.split
XIv - cmd '" ".join( str(i) for i in tt[1:])'
XIcv i$cb $cb
XFpl i$cb 175 200
XFbind $od Escape clearOut
XFbind $od Control-Return sendBack
XFbind $od Control-Shift_R innerShell
XFshspp $od 'f". pnk.lang ; {cmd}"'
XFfc z $od.see 1.0


YDdefe musicBox
XIcv mp3 Mp3
XFpk mp3 0 none


YDdefe rmMusic
XFfc z mp3.destroy


YDdefe myExit
XFcfg rec.$ma. $ds,$ic
XFfc z cli.focus


YDdefe myins
XFcfg rec.$ma. $en,$ia
XFfc z rec.$ma.focus


YDdefe sendPnk
XItgetln $oa line
XFfc z myins
XFtins rec.$ma insert 'f"{line} "' 
XFfc z rec.doSyntax
XIv - line '""'
XFfc z rec.$ma.see '"insert"'


YDdefe cliSh
XIeget cli line
XIfv - tt line.split
XIv - strn '" ".join( str(i) for i in tt[1:])'
XKif 'not tt'
WKps 

XKread() {
	local p="$1"
	XKelif "tt[0] == \"$p\""
}

XKread o
WFfc z openfile

XKread w
WFfc z savefile

XKread d
WFfc z myins
WFfc z rec.cleartxt
WFfc z myExit
WFfc z cliclr

XKread m
WFfc z musicBox

XKread md
WFfc z rmMusic

XKread s
WFfc z mapitOut

XKread dd
WItgetln rec.$ma self.ll
WFfc z myins
WFfc z rec.$ma.delete '"insert-1c linestart","insert lineend"'
WFfc z myExit
WFfc z cliclr
 
XKread p
WFfc z myins
WFtins rec.$ma insert 'f"{self.ll}\n"'
WFfc z myExit


XIgetfilenm() {
	XIeget cli line
	XIfv - f line.split
}


YDdefe openfile
XIgetfilenm
XFfc z rec.cleartxt
XFfc z myins
XFfc z rec.cleartxt
XFopft rec.$ma 'f[1]'
XFfc z rec.doSyntax
XFfc z myExit


YDdefe savefile
XIgetfilenm
XItgeta rec.$ma data 
XFwrtf data 'f[1]'
XFfc z rec.doSyntax


YDdefe cliclr
XFedel cli


YDdefp thdStart x
XIv z x x
XIfv - thd Thread 'target=x,daemon=True'
XFfc - thd.start



ZDcld Mp3
XFlbox $wl 50 20
XFcfg $wl. $fa,$bd,$aa,$gg,$kk
XFpk $wl 0 none
XIcv $ws Text width=80,height=3,$ia,$uu,$abc,$ff,$fa,$jc,$hh,$aa,$bb,$kk
XFpk $ws 0 none
XFbind $wl Control-r reloadMusic
XFbind $wl Double-Button-1 startMusic
XFbind $wl Return startMusic
XFbind $ws Control-n dlMusic
XFbind $ws Escape clearit
XFfc z loadMusic
YDdefe clearit
XFtdel $ws 1.0 end
YDdefe loadMusic
XIfv - filelist listdir "\"$MP3_DIR\""
XIfv - musiclist sorted filelist
XLfor song musiclist
WFtins $wl end 'f"{song}"'
YDdefe reloadMusic
XFedel $wl
XFfc z loadMusic
YDdefp cleanfn fn
XIv - vc '"-"'
XIv - out '""'
XLfor c fn
WKif 'str.isalnum(c) or (c in vc)'
VIac - out c
WKelse
VIac - out '""'
XDret out
YDdefp notif n,m
XIv z n n
XIv z m m
XFtins $ws 1.0 "f\"$datenow {n} {m}\n\""
YDdefe getMp3
XItgetln $ws url
XFfc z notif 'url,"Downloading"'
XIv - filepath "\"$MP3_DIR\""
XIfv - daurl YouTube url
XIfv - damusic daurl.streams.filter 'only_audio=True'
XIfv - music damusic.first
XIfv - raw music.download 'output_path=filepath'
XIfv - head,t path.splitext raw
XIfv - base path.basename head
XIfv -z filename cleanfn base
XIv - outfile 'f"{filepath}{filename}.mp3"'
XFfc - rename raw,outfile
XFfc z reloadMusic
XFfc z notif 'filename,"Ready 2 Play!"'
YDdefe playMp3
XIfv -zz sel $wl.get "$wl.curselection()"
XFfc - system "f\"mpv $MP3_DIR{sel}\""
YDdefe dlMusic
XFfc zz $M.thdStart getMp3
YDdefe startMusic
XFfc zz $M.thdStart playMp3



ZDcld $ca
XIcv $ma Text $opta
XFpk $ma 1 both
XFfc z tagConf
YDdefe synThd
XFfc zz $M.thdStart doSyntax
YDdefe cleartxt
XFtdel $ma 1.0 end
YDdefe doSyntax
XFfc zz syntax $ma
YDdefe tagConf
XIv - d '{ "arg": ("#333", "#eccca2"), "args": ("#444", "#eccca2"), "Z": ("green", "green"), "Y": ("#bfff00", "#bfff00"), "X": ("#ffb732", "#ffb732"), "W": ("#00ffff", "#00ffff"), "V": ("blue", "blue"), "U": ("#430075", "#430075"), "L": ("red", "red"), "K": ("blue", "blue"), "F": ("green", "green"), "I": ("#ffff32", "#ffff32"), "D": ("purple", "purple"),  "z": ("#202124", "#bfff00"), "dol": ("black", "black"), "eql": ("#202124", "#00ffff"),"dash": ("#202124", "#00ffff"),"dot": ("#202124", "#bfff00"), "pls": ("#202124", "#00ffff"), "star": ("#202124", "#00ffff"),}'
XLffor key,value d.items
WFtagcfg $ma key value[0] value[1]
YDdefp tagg x,y,a,b
XIv z x x
XIv z y y
XIv z a a
XIv z b b
XFfc z x.tag_add 'y,f"1.0+{a}c",f"1.0+{b}c"'
YDdefp syntax xx
XIv z xx xx
XItgeta xx data
XIv - SQ_idx "[(m.start(),m.end()) for m in finditer(r'\'(.*?)\'', data)]"
XLfor start,end SQ_idx
WFfc z tagg 'xx,"arg",start,end'
XIv - dQ_idx "[(m.start(),m.end()) for m in finditer(r'\"(.*?)\"', data)]"
XLfor start,end dQ_idx
WFfc z tagg 'xx,"args",start,end'
XIv - dol_idx "[(m.start(),m.end()) for m in finditer(r'\\$', data)]"
XLfor start,end dol_idx
WFfc z tagg 'xx,"dol",start,end'
XIv - dot_idx "[(m.start(),m.end()) for m in finditer(r'\.', data)]"
XLfor start,end dot_idx
WFfc z tagg 'xx,"dot",start,end'
XIv - dash_idx "[(m.start(),m.end()) for m in finditer(r'-', data)]"
XLfor start,end dash_idx
WFfc z tagg 'xx,"dash",start,end'
XIv - eql_idx "[(m.start(),m.end()) for m in finditer(r'=', data)]"
XLfor start,end eql_idx
WFfc z tagg 'xx,"eql",start,end'
XIv - pls_idx "[(m.start(),m.end()) for m in finditer(r'\+', data)]"
XLfor start,end pls_idx
WFfc z tagg 'xx,"pls",start,end'
XIv - star_idx "[(m.start(),m.end()) for m in finditer(r'\*', data)]"
XLfor start,end star_idx
WFfc z tagg 'xx,"star",start,end'
XIv - z_idx "[(m.start(),m.end()) for m in finditer(r'z', data)]"
XLfor start,end z_idx
WFfc z tagg 'xx,"z",start,end'
XIv - D_idx "[(m.start(),m.end()) for m in finditer(r'D', data)]"
XLfor start,end D_idx
WFfc z tagg 'xx,"D",start,end'
XIv - F_idx "[(m.start(),m.end()) for m in finditer(r'F', data)]"
XLfor start,end F_idx
WFfc z tagg 'xx,"F",start,end'
XIv - I_idx "[(m.start(),m.end()) for m in finditer(r'I', data)]"
XLfor start,end I_idx
WFfc z tagg 'xx,"I",start,end'
XIv - K_idx "[(m.start(),m.end()) for m in finditer(r'K', data)]"
XLfor start,end K_idx
WFfc z tagg 'xx,"K",start,end'
XIv - L_idx "[(m.start(),m.end()) for m in finditer(r'L', data)]"
XLfor start,end L_idx
WFfc z tagg 'xx,"L",start,end'
XIv - Z_idx "[(m.start(),m.end()) for m in finditer(r'Z', data)]"
XLfor start,end Z_idx
WFfc z tagg 'xx,"Z",start,end'
XIv - U_idx "[(m.start(),m.end()) for m in finditer(r'U', data)]"
XLfor start,end U_idx
WFfc z tagg 'xx,"U",start,end'
XIv - V_idx "[(m.start(),m.end()) for m in finditer(r'V', data)]"
XLfor start,end V_idx
WFfc z tagg 'xx,"V",start,end'
XIv - W_idx "[(m.start(),m.end()) for m in finditer(r'W', data)]"
XLfor start,end W_idx
WFfc z tagg 'xx,"W",start,end'
XIv - X_idx "[(m.start(),m.end()) for m in finditer(r'X', data)]"
XLfor start,end X_idx
WFfc z tagg 'xx,"X",start,end'
XIv - Y_idx "[(m.start(),m.end()) for m in finditer(r'Y', data)]"
XLfor start,end Y_idx
WFfc z tagg 'xx,"Y",start,end'



ZDcld $cb
XIcv $mb Text $optd 
XFpk $mb 0 none
XFfc z $mb.focus



ZFmain Pnk pnk-ide
